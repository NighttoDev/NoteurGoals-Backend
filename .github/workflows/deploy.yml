name: Safe Deploy to cPanel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip

      - name: Install dependencies
        working-directory: ./src
        run: composer install --prefer-dist --no-progress

      - name: Setup .env for test
        working-directory: ./src
        run: |
          cat > .env << 'EOF'
          APP_NAME="NoteurGoals Test"
          APP_ENV=testing
          APP_KEY=
          APP_DEBUG=true
          APP_URL=http://localhost

          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.TEST_DB_HOST }}
          DB_PORT=${{ secrets.TEST_DB_PORT }}
          DB_DATABASE=${{ secrets.TEST_DB_DATABASE }}
          DB_USERNAME=${{ secrets.TEST_DB_USERNAME }}
          DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}

          CACHE_DRIVER=array
          SESSION_DRIVER=array
          QUEUE_CONNECTION=sync
          LOG_CHANNEL=single
          EOF
          php artisan key:generate

      - name: Test database connection only (no migration)
        working-directory: ./src
        run: |
          php artisan tinker --execute="
          try {
              DB::connection()->getPdo();
              echo '✅ Database connection successful';
          } catch(Exception \$e) {
              echo '❌ Database connection failed: ' . \$e->getMessage();
              exit(1);
          }"

      - name: Run tests (no migration, no seeder)
        working-directory: ./src
        run: php artisan test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare deployment
        working-directory: ./src
        run: |
          rm -rf tests/ .github/ docker-compose* Dockerfile .env.testing .env.example
          rm -rf node_modules/ .git/ php/ nginx/
          mkdir -p storage/{logs,framework/{cache,sessions,views}}
          touch storage/logs/.gitkeep

      - name: Deploy to cPanel via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./src/
          server-dir: /admin.noteurgoals.live/
          exclude: |
            **/.env*
            **/storage/logs/*.log

      - name: Create .env on hosting if not exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /admin.noteurgoals.live
            if [ ! -f .env ]; then
              cp .env.example .env
              cat > .env << 'EOF'
              APP_NAME="NoteurGoals Backend"
              APP_ENV=production
              APP_KEY="${{ secrets.APP_KEY }}"
              APP_DEBUG=false
              APP_URL="${{ secrets.APP_URL }}"

              DB_CONNECTION=mysql
              DB_HOST="${{ secrets.DB_HOST }}"
              DB_PORT="${{ secrets.DB_PORT }}"
              DB_DATABASE="${{ secrets.DB_DATABASE }}"
              DB_USERNAME="${{ secrets.DB_USERNAME }}"
              DB_PASSWORD="${{ secrets.DB_PASSWORD }}"

              CACHE_DRIVER=file
              SESSION_DRIVER=file
              QUEUE_CONNECTION=sync
              EOF
              echo "✅ .env file created on hosting"
            else
              echo "ℹ️ .env file already exists, not overwritten"
            fi
            # Kiểm tra lại file .env
            if [ -f .env ]; then
              echo "File .env exists and is ready."
            else
              echo "Error: .env file was not created."
              exit 1
            fi
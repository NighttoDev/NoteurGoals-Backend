services:
  # Web Server Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - app-network

  # PHP Application Service
  app:
    container_name: app
    build: 
      context: ./php
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www
      - ./src/storage:/var/www/storage
      - ./src/bootstrap/cache:/var/www/bootstrap/cache
    working_dir: /var/www
    environment:
      APP_NAME: "NoteurGoals Backend"
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: "http://localhost:8080"
      DB_CONNECTION: mysql
      DB_HOST: s103d190-u2.interdata.vn
      DB_PORT: 3306
      DB_DATABASE: NoteManegementSystem
      DB_USERNAME: noteurgo
      DB_PASSWORD: b29oWG7)Ve]Ve8
    command: >
      bash -c "
        if [ ! -f .env ]; then
          echo 'APP_NAME=\"NoteurGoals Backend\"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=http://localhost:8080

          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=s103d190-u2.interdata.vn
          DB_PORT=3306
          DB_DATABASE=NoteManegementSystem
          DB_USERNAME=noteurgo
          DB_PASSWORD=b29oWG7)Ve]Ve8

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120' > .env
        fi
        php artisan key:generate
        php artisan config:cache
        php artisan storage:link
        php-fpm
      "
    networks:
      - app-network

networks:
  app-network:
    driver: bridge